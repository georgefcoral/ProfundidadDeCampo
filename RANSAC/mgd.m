function x=mgd(N,d,mu,sigmax);
%Usage x=mgd(N,d,mu,sigmax)
%
%This function generates N samples from a d-dimension
%Gaussian distribution. It differs from randn by the fact that
%you can specify the mean and the covariance you want when the samples
%are generated. This is done by applying two whitening transforms on data
%generated by the randn function.
%
%N - Number of samples to generate
%d - dimension of the Gaussian distribution
%mu - mean around which to center the samples
%sigmax - covariance matrix for the samples
%
%Ex. Generate 50 samples from a 2 dimensional multivariate Gaussian 
%distribution, with a mean of [4,5] and a covariance matrix of [9,0;0,9].
%x=mgd(50,2,[4,5]',[9,0;0,9])
%
%Created by Tim Felty as an example of the whitening transform. 2004
if (nargin~=4),
    fprintf('\nError: Not enough input arguments given.');
    return
end

z=randn(N,d); %generate the samples
sigmaz=cov(z);%calculates covariance of our gathered samples
zmean=mean(z)';%calculates the mean of our gathered samples

zmeannew=cat(2,zmean,zmean); %these two lines are used for starting the creation
munew=cat(2,mu,mu); %of the expanded mus needed for calculations


[t,u]=size(zmeannew);
while u~=N %this loop finishes the expansion
zmeannew=cat(2,zmeannew,zmean);
munew=cat(2,munew,mu);
u=u+1;
end

[ZEigVec,ZEigVal]=eig(sigmaz); %Calculates eigenvalues and vectors
[XEigVec,XEigVal]=eig(sigmax);

%by doing analysis on the dimensions it you would have to multiply by z transpose
%so the units work out, zmeannew also had to be used for dimensions to work
ytrans=(ZEigVec*ZEigVal^(-1/2))'*z'-zmeannew;

%calculate xtrans from our precalculated values
x=((((XEigVec*XEigVal^(-1/2))')^-1)*ytrans + munew)';
 
